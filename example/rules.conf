#Вайтлист по юзер-агенту
SecRule REQUEST_HEADERS:User-Agent "!@pmFromFile allowed-user-agents.data" \
    "id:9013100,\
    phase:1,\
    deny,\
    t:none,\
    msg:'Found User-Agent associated with security scanner',\
    logdata:'Matched Data: illegal UA found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}'"


#Фильтровать REQUEST_BODY (отправка форму). Пример : ограничить авторизацию 10 символами 
SecRule REQUEST_BODY "@rx ^username=\w{10}$" "id:1000849,\
     phase:2, allow, \
     t:none,t:utf8toUnicode,t:urlDecodeUni,t:removeNulls"

SecRule REQUEST_BODY "!@rx ^username=\w{10}$" "id:1000843,\
     phase:2, deny, \
     t:none,t:utf8toUnicode,t:urlDecodeUni,t:removeNulls"

#Фильтровать значение JSON
SecRule ARGS:json.password "!@rx ^lucky624$" "id:'200022',\
phase:2,deny,t:none,t:lowercase,nolog"

#Забанить URL
SecRule REQUEST_URI "/sqlite.db" \
"phase:1,id:'1000001',log,noauditlog,deny,status:403"

#Фильтровать парамметр по регулярке
SecRule ARGS:query "@rx ^[0-9_a-zA-Z]{1,7}$", "deny,id:1000947,t:urldecode"

#Забанить hack=true в запросе http://localhost:8002/?hack=true
SecRule QUERY_STRING "hack=true", "deny,id:1000847,t:urldecode"

#Бан sql injection в куках/хэдерах/теле запроса
SecRule REQUEST_BODY|REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer|ARGS_NAMES|ARGS|XML:/* "@detectSQLi" \
    "id:942100,\
     phase:2,\
     deny,\
     capture,\
     t:none,t:utf8toUnicode,t:urlDecodeUni,t:removeNulls,\
     msg:'SQL Injection Attack Detected via libinjection',\
     logdata:'Matched Data: %{TX.0} found within %{MATCHED_VAR_NAME}: %{MATCHED_VAR}'"



